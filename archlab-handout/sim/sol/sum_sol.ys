# Execution begins at address 0
    .pos 0
    irmovq  stack, %rsp
    call    main
    halt

# sample linked list
    .align 8
    ele1:
        .quad 0x00a
        .quad ele2
    ele2:
        .quad 0x0b0
        .quad ele3
    ele3:
        .quad 0xc00
        .quad 0

main:
    irmovq  ele1, %rdi
    call    sum_list
    ret

# long sum_list(list_ptr ls)
# ls in %rdi
sum_list:
    xorq    %rax, %rax  # val = 0
    irmovq  $8, %r8     # ptr to next element
    mrmovq  (%rdi), %r9 # get ele1
    andq    %r9, %r9    # set CC
    jmp     test        # Goto test
loop:
    addq    %r9, %rax   # add ele to val
    mrmovq  0x8(%rdi),%rdi
    andq    %rdi, %rdi  # set CC
    mrmovq  (%rdi),%r9
test: 
    jne     loop
    ret

# Stack starts here and grows to low address
    .pos 0x200
stack:
